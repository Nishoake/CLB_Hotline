{"version":3,"sources":["assets/CLB_DP.jpg","services/newUser.js","assets/formFields.js","components/CForm.js","components/Header.js","components/SolidHeader.js","components/Question.js","components/Blurb.js","components/Footer.js","App.js","index.js"],"names":["module","exports","addUser","info","a","mainNumber","phoneNumber","number","concat","user","name","firstname","axios","post","response","data","formFields","CForm","ref","useRef","useEffect","newUserInfo","cf","getFormData","newUser","addRobotChatResponse","secret","ConversationalForm","startTheConversation","options","theme","context","current","preventAutoFocus","submitCallback","userImage","robotImage","DP","loadExternalStyleSheet","tags","remove","className","Header","title","SolidHeader","Question","question","Blurb","blurb","Footer","icon","link","label","href","App","propsTop","useSpring","opacity","from","config","duration","propsBottom","div","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fa3d91a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CLB_DP.41fed40b.jpg\";","import axios from 'axios'\nconst baseUrl = '/api'\n\n// Send POST Request with new user information\nconst addUser = async info => {\n  // Format phone number with North American Country Code ('+1')\n  const prefix = '+1'\n  let mainNumber = info.phoneNumber\n  let number = prefix.concat(mainNumber)\n\n  let user = {\n    name: info.firstname,\n    number: number\n  }\n\n  // Send POST request\n  const response = await axios.post(baseUrl, user)\n  return response.data\n}\n\nexport default { addUser }","const formFields = [\n  {\n    'tag': 'cf-robot-message',\n    'type': 'text',\n    'name': 'greeting_1',\n    'cf-questions': 'Yo what\\'s going on? It\\'s The Boy, a.k.a. Drake 🌎'\n  },\n  {\n    'tag': 'cf-robot-message',\n    'type': 'text',\n    'name': 'greeting_2',\n    'cf-questions': 'I hope you enjoyed C.L.B. 🤰🏽'\n  },\n  {\n    'tag': 'cf-robot-message',\n    'type': 'text',\n    'name': 'greeting_3',\n    'cf-questions': 'C.L.B. Hotline was a fun experience, and I wanted to continue sending texts for future albums that I am personally anticipating such as Adele\\'s 30 & Travis Scott\\'s Utopia 💽'\n  },\n  {\n    'tag': 'input',\n    'type': 'text',\n    'name': 'firstname',\n    'id': 'firstname',\n    'required': '',\n    'minlength': '3',\n    'maxlength': '15',\n    'cf-questions': \"First off, do you have name or nickname you go by?\",\n    'cf-input-placeholder': \"Eg. The Boy\",\n    'cf-error': '3 - 15 characters',\n  },\n  {\n    'tag': 'cf-robot-message',\n    'type': 'text',\n    'name': 'greeting_4',\n    'cf-questions': \"Nice to meet you {firstname}! 🤝\",\n    'cf-conditional-continue': 'yes'\n  },\n  {\n    'tag': 'input',\n    'type': 'tel',\n    'pattern': \"[0-9]{10}\",\n    'name': 'phoneNumber',\n    'id': 'phoneNumber',\n    'required': '',\n    'minlength': '10',\n    'maxlength': '10',\n    'cf-questions': \"So {firstname}, what is your cell phone number?\",\n    'cf-input-placeholder': \"10 digit Eg. 4161234567\",\n    'cf-error': '10 digit number no dashes'\n  },\n  {\n    'tag': 'cf-robot-message',\n    'type': 'text',\n    'name': 'adding_Contact_Info_1',\n    'cf-questions': \"Alright {firstname}! Give me a minute to verify and add you to my contacts ⏳\"\n  },\n]\n\nexport default formFields","import React, { useEffect, useRef } from 'react'\nimport { ConversationalForm } from 'conversational-form'\nimport newUser from '../services/newUser'\nimport '../styles/main.css'\nimport DP from '../assets/CLB_DP.jpg'\nimport formFields from '../assets/formFields'\n\nexport default function CForm() {\n  // Create a reference object for the form component to append to\n  // Allows form component to persist throughout multiple renders\n  const ref = useRef();\n\n  // Lifecycle methods of the form component\n  useEffect(function mount() {\n    \n    // Callback function for submitting the form\n    async function submitCallback() {\n      // Collect form data\n      let newUserInfo = cf.getFormData(true)\n\n      // Send Form data as POST request to API\n      let response = await newUser.addUser(newUserInfo)\n\n      // Reneder closing form text message based on response from API\n      if (response === \"Invalid number\"){\n        \n        cf.addRobotChatResponse(\n          `This is an invalid Canadian 🇨🇦 / American 🇺🇸 cell phone number {firstname} 😂`\n        )\n        cf.addRobotChatResponse(\n          `KMT ... my time is precious like a Patek Philippe, {firstname} ✌🏼`\n        )\n\n      } else if (response === \"Non-unique number\"){\n        \n        cf.addRobotChatResponse(\n          `{firstname}, you must love talking with me 😂`\n        )\n        cf.addRobotChatResponse(\n          `You've already subscribed to the C.L.B. Hotline ✍🏼`\n        )\n        cf.addRobotChatResponse(\n          `Until next time {firstname} ✌🏼`\n        )\n\n      } else{\n\n        cf.addRobotChatResponse(\n          `Woi Oi! You've been subscribed! 💘`\n        )\n        cf.addRobotChatResponse(\n          `I'll send out a confirmation text from ${response.secret} shortly 📱`\n        )\n        cf.addRobotChatResponse(\n          `If you change your mind just text 'TAKECARE' to ${response.secret} to unsubscribe`\n        )\n        cf.addRobotChatResponse(\n          `Until next time {firstname} ✌🏼`\n        )\n\n      }\n    }\n\n    // componentDidMount() equivalent\n    let cf = ConversationalForm.startTheConversation({\n      options: {\n        theme: 'dark',\n        // append Form component to DOM via the ref object created by the useRef hook\n        context: ref.current,\n        preventAutoFocus: false,\n        submitCallback: () => {submitCallback()},\n        userImage: 'https://pbs.twimg.com/profile_images/563843814725402624/Vb8k670S_400x400.png',\n        robotImage: DP,\n        loadExternalStyleSheet: true\n      },\n      tags: formFields,\n    })\n\n    // componentWillUnmount() equivalent\n    return function unMount() {\n      cf.remove();\n    }\n\n  }, [formFields])\n\n  // Render the form by creating a div with the ref attribute assigined to the ref object created via the useRef hook above\n  return (\n      <div className='CForm' ref={ref}/>\n  )\n}","import React from 'react'\nimport '../styles/main.css'\n\nconst Header = ({ title }) => {\n  return (\n    <h1 className='outlineText'><i>{title}</i></h1>\n  )\n}\n\nexport default Header","import React from 'react'\nimport '../styles/main.css'\n\nconst SolidHeader = ({ title }) => {\n  return (\n    <h1 className='solidText'><i>{title}</i></h1>\n  )\n}\n\nexport default SolidHeader","import React from 'react'\nimport '../styles/main.css'\n\nconst Question = ({ question }) => {\n  return (\n    <h2 className='contrast'><i>{question}</i></h2>\n  )\n}\n\nexport default Question","import React from \"react\"\nimport '../styles/main.css'\n\nconst Blurb = ({ blurb }) => {\n  return <p className='contrast'>{blurb}</p>\n}\n\nexport default Blurb","import React from 'react'\nimport '../styles/main.css'\n\nconst Footer = ({ icon, link, label }) => {\n  return (\n    <div className='icon'>\n      <a href={link}><i className={icon}></i></a>\n      <p>{label}</p>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\nimport {useSpring, animated} from 'react-spring'\n\nimport CForm from './components/CForm'\nimport Header from './components/Header'\nimport SolidHeader from './components/SolidHeader'\nimport Question from './components/Question'\nimport Blurb from './components/Blurb'\nimport Footer from './components/Footer'\n\nimport './styles/main.css'\n\nfunction App() {\n  // Define springs for animation\n  const propsTop = useSpring({ opacity: 1, from: { opacity: 0 }, config: { duration: 500 } })\n  const propsBottom = useSpring({ opacity: 1, from: { opacity: 0 }, config: { duration: 1000 } })\n  \n  // Render Components\n  return (\n    <div className='parent'>\n\n      {/* Div for the header */}\n      <animated.div style={propsTop} className='logo'>\n        <Header title='C.L.B. HOTLINE' />\n        <Header title='C.L.B. HOTLINE' />\n        <SolidHeader title='C.L.B. HOTLINE' />\n        <Header title='C.L.B. HOTLINE' />\n        <Header title='C.L.B. HOTLINE' />\n      </animated.div>\n\n      {/* Div for the Text portion of the App */}\n      <animated.div style={propsTop} className=\"pitch\">\n        <div className=\"ms-word-center\">\n          <Question question=\"Growing impatient for the release of your favourite artist's next album?\" />\n        </div>\n        <div className=\"ms-word-center\">\n          <Blurb blurb='Look no further, C.L.B. Hotline is a web app built to solve this very problem. The app will send subscribers an SMS text mesage to their phone once highly anticipated albums are available on streaming platforms. Currently only Canadian and U.S. mobile numbers are supported 🇨🇦 & 🇺🇸' />\n        </div>\n        <div className=\"ms-word-center bottom\">\n          <Blurb blurb='Feel free to subscribe with the interactive onboarding process below 👇🏾' />\n        </div>\n        <div className=\"ms-word-center right\">\n          <Blurb blurb='Feel free to subscribe with the interactive onboarding process to the right 👉🏾' />\n        </div>\n      </animated.div>\n\n      {/* Div for the form input */}\n      <animated.div style={propsBottom} className='form'>\n          <CForm />\n      </animated.div>\n\n      {/* Div for the footer */}\n      <div className=\"footer\">\n        <Blurb blurb='Designed and Built by Nish 👨🏾‍💻' />\n        <div className=\"footerIcon\">\n          <Footer icon='fab fa-spotify' label='Spotify' link='https://open.spotify.com/artist/3TVXtAsR1Inumwj472S9r4' />\n          <Footer icon='fab fa-itunes-note' label='Apple Music' link='https://music.apple.com/us/artist/drake/271256' />\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}